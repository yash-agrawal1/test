pipeline {
    agent any

    parameters {
        file(name: 'CONFIG_JSON', description: 'JSON file with config_value as a list of customer IDs')
    }

    environment {
        AWS_REGION = 'ap-south-1' 
        DYNAMO_TABLE = 'nyk_usm_config_pp1'
    }

    stages {
        stage('Read JSON and Update Items in DynamoDB') {
            steps {
                script {

                    sh 'cat ${CONFIG_JSON}'
                    // Log the provided parameters
                    echo "Provided parameters: ${params}"

                    // Check if the file parameter is provided
                    if (!params.CONFIG_JSON) {
                        error "CONFIG_JSON parameter is not provided."
                    }

                    // Check if the file exists
                    def configFilePath = params.CONFIG_JSON
                    if (!fileExists(configFilePath)) {
                        error "File ${configFilePath} does not exist."
                    }

                    // Read the file
                    def configFile = readFile(configFilePath)
                    def configData = readJSON text: configFile

                    // Extract customer IDs
                    def newCustomerIds = configData.config_value.L.collect { it.S }
                    def newCustomerIdsJson = newCustomerIds.collect { [S: it] }

                    // Update DynamoDB
                    sh """
                        aws dynamodb update-item \
                            --table-name ${env.DYNAMO_TABLE} \
                            --key '{"config_name": {"S": "test_users"}}' \
                            --update-expression "ADD config_value :newCustomerIds" \
                            --expression-attribute-values '{":newCustomerIds": {"L": ${groovy.json.JsonOutput.toJson(newCustomerIdsJson)}}}' \
                            --region ${env.AWS_REGION}
                    """
                }
            }
        }
        
    }

}